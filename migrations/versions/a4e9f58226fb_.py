"""empty message

Revision ID: a4e9f58226fb
Revises: 
Create Date: 2020-03-10 00:15:41.790204

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a4e9f58226fb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('match',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('match', sa.Integer(), nullable=True),
    sa.Column('event', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alliance_suggestion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pick_number', sa.Integer(), nullable=True),
    sa.Column('team_number', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('already_selected', sa.Boolean(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('denied', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookmark',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_number', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_report',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('alliance', sa.String(), nullable=True),
    sa.Column('station', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('auto_move', sa.Boolean(), nullable=True),
    sa.Column('auto_score_bottom', sa.Integer(), nullable=True),
    sa.Column('auto_score_upper', sa.Integer(), nullable=True),
    sa.Column('auto_collect_balls', sa.Boolean(), nullable=True),
    sa.Column('auto_points', sa.Integer(), nullable=True),
    sa.Column('teleop_score_bottom', sa.Integer(), nullable=True),
    sa.Column('teleop_score_upper', sa.Integer(), nullable=True),
    sa.Column('teleop_points', sa.Integer(), nullable=True),
    sa.Column('teleop_attempts', sa.Integer(), nullable=True),
    sa.Column('teleop_success_rate', sa.Float(), nullable=True),
    sa.Column('control_panel_rotation', sa.Boolean(), nullable=True),
    sa.Column('control_panel_position', sa.Boolean(), nullable=True),
    sa.Column('control_panel_points', sa.Integer(), nullable=True),
    sa.Column('hang_able', sa.Boolean(), nullable=True),
    sa.Column('hang_level', sa.Boolean(), nullable=True),
    sa.Column('hang_position', sa.String(), nullable=True),
    sa.Column('hang_active', sa.Boolean(), nullable=True),
    sa.Column('hang_points', sa.Integer(), nullable=True),
    sa.Column('defense_performance', sa.Integer(), nullable=True),
    sa.Column('defense_penalties', sa.Integer(), nullable=True),
    sa.Column('connection_issues', sa.Boolean(), nullable=True),
    sa.Column('brownouts', sa.Boolean(), nullable=True),
    sa.Column('emergency_stop', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pit_report',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('event', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('drivetrain_type', sa.String(), nullable=True),
    sa.Column('drivetrain_type_other', sa.String(), nullable=True),
    sa.Column('wheel_type', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('wheel_type_other', sa.String(), nullable=True),
    sa.Column('wheel_number', sa.Integer(), nullable=True),
    sa.Column('motor_type', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('motor_type_other', sa.String(), nullable=True),
    sa.Column('motor_number', sa.String(), nullable=True),
    sa.Column('drivetrain_notes', sa.String(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('auto_move', sa.Boolean(), nullable=True),
    sa.Column('auto_score_bottom', sa.Boolean(), nullable=True),
    sa.Column('auto_score_outer', sa.Boolean(), nullable=True),
    sa.Column('auto_score_inner', sa.Boolean(), nullable=True),
    sa.Column('auto_collect_balls', sa.Boolean(), nullable=True),
    sa.Column('auto_consistency', sa.Integer(), nullable=True),
    sa.Column('auto_prefered_position', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('teleop_score_bottom', sa.Boolean(), nullable=True),
    sa.Column('teleop_score_outer', sa.Boolean(), nullable=True),
    sa.Column('teleop_score_inner', sa.Boolean(), nullable=True),
    sa.Column('teleop_consistency', sa.Integer(), nullable=True),
    sa.Column('teleop_ball_capacity', sa.Integer(), nullable=True),
    sa.Column('teleop_prefered_position', sa.String(), nullable=True),
    sa.Column('control_panel_rotation', sa.Boolean(), nullable=True),
    sa.Column('control_panel_position', sa.Boolean(), nullable=True),
    sa.Column('hang_able', sa.Boolean(), nullable=True),
    sa.Column('hang_level', sa.Boolean(), nullable=True),
    sa.Column('hang_prefered_position', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('hang_consistency', sa.Integer(), nullable=True),
    sa.Column('hang_time', sa.Float(), nullable=True),
    sa.Column('hang_active', sa.Boolean(), nullable=True),
    sa.Column('personnel_honesty', sa.Integer(), nullable=True),
    sa.Column('personnel_answering', sa.Integer(), nullable=True),
    sa.Column('personnel_notes', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_photo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('public_id', sa.String(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('auto_points', sa.Integer(), nullable=True),
    sa.Column('auto_points_avg', sa.Float(), nullable=True),
    sa.Column('teleop_points', sa.Integer(), nullable=True),
    sa.Column('teleop_points_avg', sa.Float(), nullable=True),
    sa.Column('teleop_score_bottom', sa.Integer(), nullable=True),
    sa.Column('teleop_score_bottom_avg', sa.Float(), nullable=True),
    sa.Column('teleop_score_upper', sa.Integer(), nullable=True),
    sa.Column('teleop_score_upper_avg', sa.Float(), nullable=True),
    sa.Column('teleop_successful_attempts', sa.Integer(), nullable=True),
    sa.Column('teleop_attempts', sa.Integer(), nullable=True),
    sa.Column('teleop_success_rate', sa.Float(), nullable=True),
    sa.Column('control_panel_points', sa.Integer(), nullable=True),
    sa.Column('control_panel_points_avg', sa.Float(), nullable=True),
    sa.Column('hang_points', sa.Integer(), nullable=True),
    sa.Column('hang_points_avg', sa.Float(), nullable=True),
    sa.Column('hang_able', sa.Integer(), nullable=True),
    sa.Column('hang_success_rate', sa.Float(), nullable=True),
    sa.Column('defense_penalties', sa.Integer(), nullable=True),
    sa.Column('defense_penalties_avg', sa.Float(), nullable=True),
    sa.Column('connection_issues', sa.Integer(), nullable=True),
    sa.Column('connection_issues_avg', sa.Float(), nullable=True),
    sa.Column('brownouts', sa.Integer(), nullable=True),
    sa.Column('brownouts_avg', sa.Float(), nullable=True),
    sa.Column('emergency_stops', sa.Integer(), nullable=True),
    sa.Column('emergency_stops_avg', sa.Float(), nullable=True),
    sa.Column('num_matches', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_stats')
    op.drop_table('team_photo')
    op.drop_table('pit_report')
    op.drop_table('match_report')
    op.drop_table('bookmark')
    op.drop_table('alliance_suggestion')
    op.drop_table('user')
    op.drop_table('team')
    op.drop_table('match')
    # ### end Alembic commands ###
